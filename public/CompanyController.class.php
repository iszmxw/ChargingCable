<?phpnamespace Qwadmin\Controller;use Think\Upload;class CompanyController extends ComController{    /**     * [index 会员首页-信息展示]     * @return [type] [description]     */    public function index()    {        $p = isset($_GET['p']) ? intval($_GET['p']) : '1';        $field = isset($_GET['field']) ? $_GET['field'] : '';        $keyword = isset($_GET['keyword']) ? htmlentities($_GET['keyword']) : '';        $order = isset($_GET['order']) ? $_GET['order'] : 'DESC';        $where = '';        $prefix = C('DB_PREFIX');        if ($order == 'asc') {            $order = "{$prefix}companyinfo.updated_date asc";        } elseif (($order == 'desc')) {            $order = "{$prefix}companyinfo.updated_date desc";        } else {            $order = "{$prefix}companyinfo.id asc";        }        if ($keyword <> '') {            if ($field == 'name') {                $where = "{$prefix}companyinfo.name LIKE '%$keyword%'";            }            if ($field == 'key_no') {                $where = "{$prefix}companyinfo.key_no LIKE '%$keyword%'";            }            if ($field == 'no') {                $where = "{$prefix}companyinfo.no LIKE '%$keyword%'";            }            if ($field == 'oper_name') {                $where = "{$prefix}companyinfo.oper_name LIKE '%$keyword%'";            }        }        $companyinfo = M('companyinfo');        $pagesize = 10;#每页数量        $offset = $pagesize * ($p - 1);//计算记录偏移量        $count = $companyinfo->order($order)->where($where)->count();        $list  = $companyinfo->order($order)->where($where)->limit($offset . ',' . $pagesize)->select();        //$user->getLastSql();        $page = new \Think\Page($count, $pagesize);        $page = $page->show();        $this->assign('list', $list);        $this->assign('page', $page);        $this->display();    }    /**     * [add 添加会员信息]     */    public function add()    {        $this->display('form');    }    /**     * [update 添加（修改）会员操作]     * @return [type] [description]     */    public function update($ajax = '')    {        $keyno  = isset($_POST['keyno']) ? trim($_POST['keyno']) : '';        $type   = isset($_POST['type']) ? trim($_POST['type']) : '';        switch ($type)         {            case 'zl':                break;            case 'sb':                break;            case 'zzq':                break;            case 'qyzs':                break;            case 'gdxx':                break;            case 'zyry':                break;            case 'lsbg':                break;            case 'xzxkxyzg':                break;            case 'xzxkgsj':                break;            case 'swxx':                break;            case 'sxxx':                break;            case 'bzxr':                break;            case 'jyyc':                break;            case 'xzcfxyzg':                break;            case 'xzcfgsj':                break;            case 'dcdy':                break;            case 'gqcz':                break;            case 'lxxx':                break;                        default:                /*加载会员信息*/                $data['name']           = isset($_POST['name']) ? trim($_POST['name']) : '';                $data['no']             = isset($_POST['no']) ? trim($_POST['no']) : '';                $data['belong_org']     = isset($_POST['belong_org']) ? trim($_POST['belong_org']) : '';                $data['oper_name']      = isset($_POST['oper_name']) ? trim($_POST['oper_name']) : '';                $data['start_date']     = isset($_POST['start_date']) ? trim($_POST['start_date']) : '';                $data['end_date']       = isset($_POST['end_date']) ? trim($_POST['end_date']) : '';                $data['status']         = isset($_POST['status']) ? trim($_POST['status']) : '';                $data['province']       = isset($_POST['province']) ? trim($_POST['province']) : '';                $data['updated_date']   = isset($_POST['updated_date']) ? trim($_POST['updated_date']) : '';                $data['credit_code']    = isset($_POST['credit_code']) ? trim($_POST['credit_code']) : '';                $data['regist_capi']    = isset($_POST['regist_capi']) ? trim($_POST['regist_capi']) : '';                $data['econ_kind']      = isset($_POST['econ_kind']) ? trim($_POST['econ_kind']) : '';                $data['address']        = isset($_POST['address']) ? trim($_POST['address']) : '';                $data['scope']          = isset($_POST['scope']) ? trim($_POST['scope']) : '';                $data['term_start']     = isset($_POST['term_start']) ? trim($_POST['term_start']) : '';                $data['team_end']       = isset($_POST['team_end']) ? trim($_POST['team_end']) : '';                $data['check_date']     = isset($_POST['check_date']) ? trim($_POST['check_date']) : '';                $data['org_no']         = isset($_POST['org_no']) ? trim($_POST['org_no']) : '';                $data['is_on_stock']    = isset($_POST['is_on_stock']) ? trim($_POST['is_on_stock']) : '';                $data['stock_number']   = isset($_POST['stock_number']) ? trim($_POST['stock_number']) : '';                $data['stock_type']     = isset($_POST['stock_type']) ? trim($_POST['stock_type']) : '';                $data['image_url']      = isset($_POST['image_url']) ? trim($_POST['image_url']) : '';                /*会员信息加载end*/                break;        }        /*判断添加*/        if (!$keyno)         {            $uid = M('companyinfo')->data($data)->add();            addlog('新增会员，会员ID：' . $uid);        }        else         {            M('companyinfo')->data($data)->where("key_no=$keyno")->save();            $cid = M('companyinfo')->where("key_no=$keyno")->find()['id'];            M('monitor')->data(['status' => 1])->where(['cid' => $cid])->save();            addlog('编辑企业信息，企业主键KeyNo：' . $keyno);        }        $this->success('操作成功！');    }    /**     * [edit 修改会员信息]     * @return [type] [description]     */    public function edit()    {        $keyno  = isset($_GET['keyno']) ? trim($_GET['keyno']) : '';        $type   = isset($_GET['type']) ? trim($_GET['type']) : '';        if(!$keyno)        {            $this->error('参数错误！');        }                $companyinfo = M('companyinfo')->where(['key_no' => $keyno])->find();        switch ($type)         {            case 'zl':                $list = M('searchmultipatents')->where(['searchKey' => $keyno])->select();                $this->assign('keyno', $keyno);                break;            case 'sb':                $list = M('search')->where(['keyword' => $companyinfo['name']])->select();                $this->assign('keyno', $companyinfo['name']);                break;            case 'zzq':                $list = M('searchsoftwarecr')->where(['KeyNo' => $keyno])->select();                $this->assign('keyno', $keyno);                break;            case 'qyzs':                $list = M('searchcertification')->where(['searchKey' => $companyinfo['name']])->select();                $this->assign('keyno', $companyinfo['name']);                break;            case 'gdxx':                $list  = M('partners')->where(['KeyNo' => $keyno])->select();                break;            case 'zyry':                $list  = M('employees')->where(['KeyNo' => $keyno])->select();                break;            case 'lsbg':                $list  = M('change_records')->where(['KeyNo' => $keyno])->select();                break;            case 'xzxkxyzg':                $list  = M('permissioninfo')->where(['KeyNo' => $keyno])->select();                break;            case 'xzxkgsj':                $list  = M('permissioneciinfo')->where(['KeyNo' => $keyno])->select();                break;            case 'swxx':                $list  = M('companytaxcredititems')->where(['KeyNo' => $keyno])->select();                break;            case 'sxxx':                $list  = M('shixinitems')->where(['KeyNo' => $keyno])->select();                break;            case 'bzxr':                $list  = M('zhixingitems')->where(['KeyNo' => $keyno])->select();                break;            case 'jyyc':                $list  = M('exceptions')->where(['KeyNo' => $keyno])->select();                break;            case 'xzcfxyzg':                $list  = M('penaltycreditchina')->where(['KeyNo' => $keyno])->select();                break;            case 'xzcfgsj':                $list  = M('penalty')->where(['KeyNo' => $keyno])->select();                break;            case 'dcdy':                $list  = M('mpledge')->where(['KeyNo' => $keyno])->select();                break;            case 'gqcz':                $list  = M('pledge')->where(['KeyNo' => $keyno])->select();                break;            case 'lxxx':                $list  = M('getcontactinfo')->where(['KeyNo' => $keyno])->select();                foreach ($list as $key => $value)                 {                    $list[$key]['website'] = json_decode($value['website'], TRUE);                }                break;                        default:                $list = $companyinfo;                break;        }        $this->assign('list', $list);        $this->display('form');    }    public function del()    {        $id = $_GET['id'];        if($id)        {            $map['id'] = $id;            if (M('companyinfo')->where($map)->delete())             {                addlog('删除会员ID：' . $id);                $this->success('恭喜，用户删除成功！');            }             else             {                $this->error('参数错误！');            }        }        else        {            $uids = isset($_REQUEST['uids']) ? $_REQUEST['uids'] : false;            if (is_array($uids))             {                foreach ($uids as $k => $v)                 {                    $uids[$k] = intval($v);                }                if (!$uids)                 {                    $this->error('参数错误！');                    $uids = implode(',', $uids);                }            }            $map['id'] = array('in', $uids);            if (M('companyinfo')->where($map)->delete())             {                addlog('删除会员ID：' . implode(',', $uids));                $this->success('恭喜，用户删除成功！');            }             else             {                $this->error('参数错误！');            }        }    }    /**     * [excelToArray 批量上传企业信息]     * @return [type] [description]     */    public function excelToArray()    {        if ($_FILES['file']) {            $exts = array(                'xlsx',                'xls',            );            $upload = new Upload(array(                'exts' => $exts,                'rootPath' => './Public/',                'savePath' => 'attached/'.date('Y')."/".date('m')."/",                'subName'  =>  array('date', 'd'),            ));            $info = $upload->upload($_FILES);            if(!$info) {// 上传错误提示错误信息                $error = $upload->getError();                echo "<script>alert('{$error}')</script>";die;            }else{// 上传成功                foreach ($info as $item) {                    $filePath = __ROOT__."/Public/".$item['savepath'].$item['savename'];                }            }        }        else        {            echo "<script>alert('请先选中上传的Excel文件')</script>";die;        }        $filename = ".".$filePath;        Vendor("Classes.PHPExcel");        Vendor('Classes.PHPExcel.IOFactory');        $objPHPExcelReader = \PHPExcel_IOFactory::load($filename);        $sheet = $objPHPExcelReader->getSheet(0);        // 读取第一个工作表(编号从 0 开始)          $highestRow = $sheet->getHighestRow();           // 取得总行数          $highestColumn = $sheet->getHighestColumn();     // 取得总列数          // 一次读取一列        for ($row = 2; $row <= $highestRow; $row++)         {            $resArr['key_no'] = password(random(32, 'all'));            $resArr['name'] = $sheet->getCellByColumnAndRow(0, $row)->getValue();            $resArr['no'] = $sheet->getCellByColumnAndRow(12, $row)->getValue();            $resArr['oper_name'] = $sheet->getCellByColumnAndRow(2, $row)->getValue();            $resArr['start_date'] = $sheet->getCellByColumnAndRow(4, $row)->getValue();            $resArr['status'] = $sheet->getCellByColumnAndRow(1, $row)->getValue();            $resArr['credit_code'] = $sheet->getCellByColumnAndRow(10, $row)->getValue();            $resArr['regist_capi'] = $sheet->getCellByColumnAndRow(3, $row)->getValue();            $resArr['econ_kind'] = $sheet->getCellByColumnAndRow(14, $row)->getValue();            $resArr['address'] = $sheet->getCellByColumnAndRow(17, $row)->getValue();            $resArr['scope'] = $sheet->getCellByColumnAndRow(18, $row)->getValue();            $resArr['org_no'] = $sheet->getCellByColumnAndRow(13, $row)->getValue();            $resArr['is_on_stock'] = 0;            $companyList = M('companyinfo')->where(['name' => $resArr['name'], 'no' => $resArr['no']])->find();            if(!$companyList)            {                M('companyinfo')->data($resArr)->add();            }            $getbriefintroduction = array(                'companyName'   => $resArr['key_no'],                'KeyNo'         => $resArr['key_no'],                'Name'          => $resArr['name'],                'Address'       => $resArr['address'],                'WebSite'       => $sheet->getCellByColumnAndRow(16, $row)->getValue(),                'Tel'           => $sheet->getCellByColumnAndRow(7, $row)->getValue(),                'Fax'           => $sheet->getCellByColumnAndRow(8, $row)->getValue(),                'Email'         => $sheet->getCellByColumnAndRow(9, $row)->getValue(),                'Hangye'        => $sheet->getCellByColumnAndRow(15, $row)->getValue(),                'Content'       => $resArr['scope'],                );            $getbriefintroductionList = M('getbriefintroduction')->where(['Name' => $resArr['name']])->find();            unset($resArr);            if(!$getbriefintroductionList)            {                M('getbriefintroduction')->data($getbriefintroduction)->add();            }            unset($getbriefintroduction);        }        $this->success('恭喜，数据导入成功！');    }    /**     * [excelToZl 批量上传企业专利信息]     * @return [type] [description]     */    public function excelToZl()    {        if ($_FILES['file']) {            $exts = array(                'xlsx',                'xls',            );            $upload = new Upload(array(                'exts' => $exts,                'rootPath' => './Public/',                'savePath' => 'attached/'.date('Y')."/".date('m')."/",                'subName'  =>  array('date', 'd'),            ));            $info = $upload->upload($_FILES);            if(!$info) {// 上传错误提示错误信息                $error = $upload->getError();                echo "<script>alert('{$error}')</script>";die;            }else{// 上传成功                foreach ($info as $item) {                    $filePath = __ROOT__."/Public/".$item['savepath'].$item['savename'];                }            }        }        else        {            echo "<script>alert('请先选中上传的Excel文件')</script>";die;        }        $filename = ".".$filePath;        Vendor("Classes.PHPExcel");        Vendor('Classes.PHPExcel.IOFactory');        $objPHPExcelReader = \PHPExcel_IOFactory::load($filename);        $sheet = $objPHPExcelReader->getSheet(0);        // 读取第一个工作表(编号从 0 开始)          $highestRow = $sheet->getHighestRow();           // 取得总行数          $highestColumn = $sheet->getHighestColumn();     // 取得总列数          $arr = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');        $data = array('sid','LegalStatus','KindCode','IPCList','ApplicationNumber','ApplicationDate','PublicationNumber','PublicationDate','LegalStatusDesc','Title','Agency','KindCodeDesc','IPCDesc','InventorStringList','AssigneestringList');        // 一次读取一列        $keyno = $_POST['keyno'];        for ($row = 2; $row <= $highestRow; $row++)         {            $row_arr = array();            for ($column = 0; $arr[$column] != 'P'; $column++)            {                $val = $sheet->getCellByColumnAndRow($column, $row)->getValue();                $row_arr[$data[$column]] = (string)$val;            }            $resArr = $row_arr;            $resArr['searchKey'] = $keyno;            $searchmultipatents = M('searchmultipatents')->where(['sid' => $resArr['sid']])->find();            if(!$searchmultipatents)            {                M('searchmultipatents')->data($resArr)->add();            }            $searchpatents = array(                'sid'                   => $resArr['sid'],                'DocumentTypes'         => $sheet->getCellByColumnAndRow(16, $row)->getValue(),                'Agent'                 => $sheet->getCellByColumnAndRow(17, $row)->getValue(),                'LegalStatusDate'       => $sheet->getCellByColumnAndRow(18, $row)->getValue(),                'PrimaryExaminer'       => $sheet->getCellByColumnAndRow(19, $row)->getValue(),                'AssiantExaminer'       => $sheet->getCellByColumnAndRow(20, $row)->getValue(),                'Cites'                 => $sheet->getCellByColumnAndRow(19, $row)->getValue(),                'OtherReferences'       => $sheet->getCellByColumnAndRow(21, $row)->getValue(),                'PatentImage'           => $sheet->getCellByColumnAndRow(22, $row)->getValue(),                'IPCList'               => $resArr['IPCList'],                'ApplicationNumber'     => $resArr['ApplicationNumber'],                'ApplicationDate'       => $resArr['ApplicationDate'],                'PublicationNumber'     => $resArr['PublicationNumber'],                'PublicationDate'       => $resArr['PublicationDate'],                'LegalStatusDesc'       => $resArr['LegalStatusDesc'],                'Title'                 => $sheet->getCellByColumnAndRow(23, $row)->getValue(),                'Abstract'              => $sheet->getCellByColumnAndRow(24, $row)->getValue(),                'Agency'                => $resArr['Agency'],                'KindCodeDesc'          => $resArr['KindCodeDesc'],                'IPCDesc'               => $resArr['IPCDesc'],                'InventorStringList'    => $resArr['InventorStringList'],                'AssigneestringList'    => $resArr['AssigneestringList'],                'PatentLegalHistory'    => $sheet->getCellByColumnAndRow(25, $row)->getValue(),                );            $searchpatentsList = M('searchpatents')->where(['sid' => $resArr['sid']])->find();            unset($resArr);            if(!$searchpatentsList)            {                M('searchpatents')->data($searchpatents)->add();            }            unset($searchpatents);        }        $this->success('恭喜，数据导入成功！');    }    /**     * [excelToSb 批量上传企业商标信息]     * @return [type] [description]     */    public function excelToSb()    {        if ($_FILES['file']) {            $exts = array(                'xlsx',                'xls',            );            $upload = new Upload(array(                'exts' => $exts,                'rootPath' => './Public/',                'savePath' => 'attached/'.date('Y')."/".date('m')."/",                'subName'  =>  array('date', 'd'),            ));            $info = $upload->upload($_FILES);            if(!$info) {// 上传错误提示错误信息                $error = $upload->getError();                echo "<script>alert('{$error}')</script>";die;            }else{// 上传成功                foreach ($info as $item) {                    $filePath = __ROOT__."/Public/".$item['savepath'].$item['savename'];                }            }        }        else        {            echo "<script>alert('请先选中上传的Excel文件')</script>";die;        }        $filename = ".".$filePath;        Vendor("Classes.PHPExcel");        Vendor('Classes.PHPExcel.IOFactory');        $objPHPExcelReader = \PHPExcel_IOFactory::load($filename);        $sheet = $objPHPExcelReader->getSheet(0);        // 读取第一个工作表(编号从 0 开始)          $highestRow = $sheet->getHighestRow();           // 取得总行数          $highestColumn = $sheet->getHighestColumn();     // 取得总列数          $arr = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');        $data = array('sid','RegNo','IntCls','Name','AppDate','ApplicantCn','ApplicantEn','Agent','Status','FlowStatus','FlowStatusDesc','HasImage','ImageUrl');        // 一次读取一列        $keyno = $_POST['keyno'];        for ($row = 2; $row <= $highestRow; $row++)         {            $row_arr = array();            for ($column = 0; $arr[$column] != 'N'; $column++)            {                $val = $sheet->getCellByColumnAndRow($column, $row)->getValue();                $row_arr[$data[$column]] = (string)$val;            }            $resArr = $row_arr;            $resArr['keyword'] = $keyno;            $search = M('search')->where(['sid' => $resArr['sid']])->find();            if(!$search)            {                M('search')->data($resArr)->add();            }            $getdetails = array(                'sid'               => $resArr['sid'],                'AddressCn'         => $sheet->getCellByColumnAndRow(14, $row)->getValue(),                'AddressEn'         => $sheet->getCellByColumnAndRow(15, $row)->getValue(),                'AnnouncementIssue' => $sheet->getCellByColumnAndRow(16, $row)->getValue(),                'AnnouncementDate'  => $sheet->getCellByColumnAndRow(17, $row)->getValue(),                'Applicant1'        => $sheet->getCellByColumnAndRow(18, $row)->getValue(),                'Applicant2'        => $sheet->getCellByColumnAndRow(19, $row)->getValue(),                'Color'             => $sheet->getCellByColumnAndRow(20, $row)->getValue(),                'RegIssue'          => $sheet->getCellByColumnAndRow(21, $row)->getValue(),                'RegDate'           => $sheet->getCellByColumnAndRow(22, $row)->getValue(),                'HouQiZhiDingDate'  => $sheet->getCellByColumnAndRow(23, $row)->getValue(),                'GuoJiZhuCeDate'    => $sheet->getCellByColumnAndRow(24, $row)->getValue(),                'YouXianQuanDate'   => $sheet->getCellByColumnAndRow(25, $row)->getValue(),                'ValidPeriod'       => $sheet->getCellByColumnAndRow(26, $row)->getValue(),                'ListGroupItems'    => $sheet->getCellByColumnAndRow(27, $row)->getValue(),                'RegNo'             => $resArr['RegNo'],                'IntCls'            => $resArr['IntCls'],                'Name'              => $resArr['Name'],                'AppDate'           => $resArr['AppDate'],                'ApplicantCn'       => $resArr['ApplicantCn'],                'ApplicantEn'       => $resArr['ApplicantEn'],                'Agent'             => $resArr['Agent'],                'Status'            => $resArr['Status'],                'FlowStatus'        => $resArr['FlowStatus'],                'FlowStatusDesc'    => $resArr['FlowStatusDesc'],                'HasImage'          => $resArr['HasImage'],                'ImageUrl'          => $resArr['ImageUrl'],                'FlowItems'         => $sheet->getCellByColumnAndRow(28, $row)->getValue(),                );            $getdetailsList = M('getdetails')->where(['RegisterNo' => $resArr['RegisterNo']])->find();            unset($resArr);            if(!$getdetailsList)            {                M('getdetails')->data($getdetails)->add();            }            unset($getdetails);        }        $this->success('恭喜，数据导入成功！');    }    /**     * [excelToZzq 批量上传企业著作权信息]     * @return [type] [description]     */    public function excelToZzq()    {        if ($_FILES['file']) {            $exts = array(                'xlsx',                'xls',            );            $upload = new Upload(array(                'exts' => $exts,                'rootPath' => './Public/',                'savePath' => 'attached/'.date('Y')."/".date('m')."/",                'subName'  =>  array('date', 'd'),            ));            $info = $upload->upload($_FILES);            if(!$info) {// 上传错误提示错误信息                $error = $upload->getError();                echo "<script>alert('{$error}')</script>";die;            }else{// 上传成功                foreach ($info as $item) {                    $filePath = __ROOT__."/Public/".$item['savepath'].$item['savename'];                }            }        }        else        {            echo "<script>alert('请先选中上传的Excel文件')</script>";die;        }        $filename = ".".$filePath;        Vendor("Classes.PHPExcel");        Vendor('Classes.PHPExcel.IOFactory');        $objPHPExcelReader = \PHPExcel_IOFactory::load($filename);        $sheet = $objPHPExcelReader->getSheet(0);        // 读取第一个工作表(编号从 0 开始)          $highestRow = $sheet->getHighestRow();           // 取得总行数          $highestColumn = $sheet->getHighestColumn();     // 取得总列数          $arr = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');        $data = array('Category','PublishDate','VersionNo','RegisterNo','RegisterAperDate','Name','ShortName','Owner');        // 一次读取一列        $keyno = $_POST['keyno'];        for ($row = 2; $row <= $highestRow; $row++)         {            $row_arr = array();            for ($column = 0; $arr[$column] != 'I'; $column++)            {                $val = $sheet->getCellByColumnAndRow($column, $row)->getValue();                $row_arr[$data[$column]] = (string)$val;            }            $resArr = $row_arr;            $resArr['KeyNo'] = $keyno;            $searchsoftwarecr = M('searchsoftwarecr')->where(['Name' => $resArr['Name']])->find();            if(!$searchsoftwarecr)            {                M('searchsoftwarecr')->data($resArr)->add();            }            $getsoftwarecr = array(                'searchKey'         => $resArr['KeyNo'],                'Category'          => $resArr['Category'],                'PublishDate'       => $resArr['PublishDate'],                'VersionNo'         => $resArr['VersionNo'],                'RegisterNo'        => $resArr['RegisterNo'],                'RegisterAperDate'  => $resArr['RegisterAperDate'],                'Name'              => $resArr['Name'],                'ShortName'         => $resArr['ShortName'],                'Owner'             => $resArr['Owner'],                );            $getsoftwarecrList = M('getsoftwarecr')->where(['RegisterNo' => $resArr['RegisterNo']])->find();            unset($resArr);            if(!$getsoftwarecrList)            {                M('getsoftwarecr')->data($getsoftwarecr)->add();            }            unset($getsoftwarecr);        }        $this->success('恭喜，数据导入成功！');    }    /**     * [excelToQyzs 批量上传企业企业证书信息]     * @return [type] [description]     */    public function excelToQyzs()    {        if ($_FILES['file']) {            $exts = array(                'xlsx',                'xls',            );            $upload = new Upload(array(                'exts' => $exts,                'rootPath' => './Public/',                'savePath' => 'attached/'.date('Y')."/".date('m')."/",                'subName'  =>  array('date', 'd'),            ));            $info = $upload->upload($_FILES);            if(!$info) {// 上传错误提示错误信息                $error = $upload->getError();                echo "<script>alert('{$error}')</script>";die;            }else{// 上传成功                foreach ($info as $item) {                    $filePath = __ROOT__."/Public/".$item['savepath'].$item['savename'];                }            }        }        else        {            echo "<script>alert('请先选中上传的Excel文件')</script>";die;        }        $filename = ".".$filePath;        Vendor("Classes.PHPExcel");        Vendor('Classes.PHPExcel.IOFactory');        $objPHPExcelReader = \PHPExcel_IOFactory::load($filename);        $sheet = $objPHPExcelReader->getSheet(0);        // 读取第一个工作表(编号从 0 开始)          $highestRow = $sheet->getHighestRow();           // 取得总行数          $highestColumn = $sheet->getHighestColumn();     // 取得总列数          $arr = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');        $data = array('cid','Name','Type','StartDate','EndDate','No');        // 一次读取一列        $keyno = $_POST['keyno'];        for ($row = 2; $row <= $highestRow; $row++)         {            $row_arr = array();            for ($column = 0; $arr[$column] != 'G'; $column++)            {                $val = $sheet->getCellByColumnAndRow($column, $row)->getValue();                $row_arr[$data[$column]] = (string)$val;            }            $resArr = $row_arr;            $resArr['searchKey'] = $keyno;            $searchcertification = M('searchcertification')->where(['cid' => $resArr['cid']])->find();            if(!$searchcertification)            {                M('searchcertification')->data($resArr)->add();            }            $getcertificationdetailbyid = array(                'sid'       => $resArr['cid'],                'Data'      => $sheet->getCellByColumnAndRow(7, $row)->getValue(),                'Schema'    => $sheet->getCellByColumnAndRow(8, $row)->getValue(),                );            $getcertificationdetailbyidList = M('getcertificationdetailbyid')->where(['sid' => $resArr['cid']])->find();            unset($resArr);            if(!$getcertificationdetailbyidList)            {                M('getcertificationdetailbyid')->data($getcertificationdetailbyid)->add();            }            unset($getcertificationdetailbyid);        }        $this->success('恭喜，数据导入成功！');    }}